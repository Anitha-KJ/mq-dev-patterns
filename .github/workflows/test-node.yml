name: Run Node.js Tests with IBM MQ in Podman

on:
  push:
    branches:
      - regression-test_anitha
    paths:
      - 'Node.js/**'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Podman
        run: |
          sudo apt-get update
          sudo apt-get install -y podman

      - name: Pull IBM MQ image
        run: podman pull icr.io/ibm-messaging/mq:latest

      - name: Run IBM MQ container (QM1)
        run: |
          podman run \
            --env LICENSE=accept \
            --env MQ_QMGR_NAME=QM1 \
            --env MQ_APP_USER=app \
            --env MQ_APP_PASSWORD=passw0rd \
            --env MQ_ADMIN_USER=admin \
            --env MQ_ADMIN_PASSWORD=passw0rd \
            --volume qm1data:/mnt/mqm \
            --publish 1414:1414 \
            --publish 9443:9443 \
            --detach \
            --name QM1 \
            icr.io/ibm-messaging/mq:latest

      - name: Wait for QMGR to be running
        run: |
          for i in {1..12}; do
            STATUS=$(podman exec QM1 bash -c "dspmq -m QM1" | grep -o 'STATUS([^)]*)' | cut -d'(' -f2 | cut -d')' -f1)
            echo "QMGR state: $STATUS"
            if [ "$STATUS" = "Running" ]; then
              echo "QM1 is running"
              break
            fi
            echo "Waiting for QMGR to start..."
            sleep 5
          done
      - name: check for the qmgr's 
        run: |
          podman exec QM1 bash -c "dspmq"

      - name: Create env.json
        working-directory: Node.js
        run: |
          cat << EOF > env.json
          {
            "MQ_ENDPOINTS": [{
              "HOST": "127.0.0.1",
              "PORT": "1414",
              "CHANNEL": "DEV.APP.SVRCONN",
              "QMGR": "QM1",
              "APP_USER": "app",
              "APP_PASSWORD": "passw0rd",
              "QUEUE_NAME": "DEV.QUEUE.1",
              "BACKOUT_QUEUE": "DEV.QUEUE.2",
              "MODEL_QUEUE_NAME": "DEV.APP.MODEL.QUEUE",
              "DYNAMIC_QUEUE_PREFIX": "APP.REPLIES.*",
              "TOPIC_NAME": "dev/"
            }]
          }
          EOF
          echo "PWD: $(pwd)"
          ls -l
          cat env.json

      - name: Install dependencies
        working-directory: Node.js
        run: |
          npm install
          npm install --global mocha

      - name: Run Node.js tests
        working-directory: Node.js
        env: 
          EnvFile: "/home/runner/work/mq-dev-patterns/mq-dev-patterns/Node.js/env.json"
        run: mocha
